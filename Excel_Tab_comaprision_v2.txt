import pandas as pd
from openpyxl import load_workbook

# Load the Excel workbook
file_path = "Testdomain.xlsx"
excel_data = pd.ExcelFile(file_path)

# Read all sheets into a dictionary, ensuring domain names are cleaned
sheets_data = {sheet_name: excel_data.parse(sheet_name) for sheet_name in excel_data.sheet_names}

# Convert each sheet's domain list into a set for comparison
domain_sets = {}
for sheet_name, data in sheets_data.items():
    # Assuming domain names are in the first column (ensure it's the correct column)
    domain_sets[sheet_name] = set(data.iloc[:, 0].dropna().astype(str).apply(lambda x: x.strip().lower()))

# Find common domains across all sheets (appearing in more than one sheet)
common_domains = {domain for domain, count in pd.Series([domain for sheet in domain_sets.values() for domain in sheet]).value_counts().items() if count > 1}

# Find unique domains for each sheet
unique_domains = {
    sheet_name: domains - common_domains for sheet_name, domains in domain_sets.items()
}

# Prepare data for common domains (domain name with sheet names)
common_data = []
for domain in common_domains:
    sheets_with_domain = [sheet_name for sheet_name, domains in domain_sets.items() if domain in domains]
    common_data.append([domain, ', '.join(sheets_with_domain)])

common_data_df = pd.DataFrame(common_data, columns=["Domain", "Sheets"])

# Prepare data for unique domains (domain name with sheet names)
unique_data = []
for sheet_name, domains in unique_domains.items():
    for domain in domains:
        unique_data.append([domain, sheet_name])

unique_data_df = pd.DataFrame(unique_data, columns=["Domain", "Sheet"])

print("Common Domains:", common_domains)
print("Unique Domains:", unique_domains)

# Write the data to a new workbook, including common and unique domain sheets
with pd.ExcelWriter(file_path, engine='openpyxl', mode='a', if_sheet_exists='replace') as writer:
    # Write Common Domains with their sheet names to the "Common Data" sheet
    common_data_df.to_excel(writer, sheet_name="Common Data", index=False, startrow=0)
    
    # Write Unique Domains with their sheet names to the "Unique Data" sheet
    unique_data_df.to_excel(writer, sheet_name="Unique Data", index=False, startrow=0)

print("Processed data has been added to the 'Common Data' and 'Unique Data' sheets.")
