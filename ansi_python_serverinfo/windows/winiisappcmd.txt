---
- name: Gather Windows Update Information and IIS Details
  hosts: your_windows_hosts  # Replace with the target Windows hosts or group name
  gather_facts: no
  tasks:
    - name: Run PowerShell script explicitly as an administrator
      script:
        inline: |
          param ($appCmdPath)

          Import-Module WebAdministration -Force

          $kbUpdates = Get-WmiObject -Class Win32_QuickFixEngineering | Sort-Object -Property InstalledOn -Descending
          $lastReboot = Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty LastBootUpTime
          $kbUpdatesInfo = @()
          foreach ($update in $kbUpdates) {
              $kbNumber = $update.HotFixID
              $patchName = $update.Description
              $installedOn = $update.InstalledOn.ToShortDateString()
              $kbUpdatesInfo += "$kbNumber - $patchName - $installedOn"
          }

          $output = @()
          $output += "Last Reboot Time: $lastReboot"
          $output += "KB Updates:"
          $output += $kbUpdatesInfo

          $iisInfo = @()
          if (Test-Path $appCmdPath) {
              $appPools = & $appCmdPath list apppool /text:name,state
              $appPools | ForEach-Object {
                  $appPoolDetails = $_ -split ":"
                  $appPoolName = $appPoolDetails[0].Trim()
                  $appPoolState = $appPoolDetails[1].Trim()
                  $iisInfo += "$appPoolName - State: $appPoolState"
              }

              $output += "IIS Websites:"
              $output += $iisInfo
          }

          $output
        appCmdPath: "C:\\Windows\\System32\\inetsrv\\appcmd.exe"
      register: ps_output
      remote_src: no

    - name: Display Gathered Information
      debug:
        var: ps_output.stdout_lines
