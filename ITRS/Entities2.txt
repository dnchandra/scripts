import xml.etree.ElementTree as ET
import pandas as pd

# Load the XML file
tree = ET.parse("gateway.xml")
root = tree.getroot()

# Namespace handling
def strip_namespace(tag):
    return tag.split('}', 1)[-1] if '}' in tag else tag

# Recursive function to handle nested managedEntityGroups
def process_entity_group(elem, group_path, results):
    for child in elem:
        tag = strip_namespace(child.tag)
        if tag == "managedEntityGroup":
            name = child.attrib.get("name", "")
            new_group_path = f"{group_path}/{name}" if group_path else name
            process_entity_group(child, new_group_path, results)
        elif tag == "managedEntity":
            row = {
                "Group Path": group_path,
                "Entity Name": child.attrib.get("name", "")
            }

            # Get attributes
            for attr in child.findall("./attribute"):
                attr_name = attr.attrib.get("name")
                attr_value = attr.text
                row[attr_name] = attr_value

            # Get type refs
            type_refs = [t.attrib.get("ref") for t in child.findall(".//type") if t.attrib.get("ref")]
            row["Type Refs"] = ", ".join(type_refs)

            # Get sampler refs
            sampler_refs = [s.attrib.get("ref") for s in child.findall(".//sampler") if s.attrib.get("ref")]
            row["Sampler Refs"] = ", ".join(sampler_refs)

            # Get probe refs
            probe_refs = [p.attrib.get("ref") for p in child.findall(".//probe") if p.attrib.get("ref")]
            row["Probe Refs"] = ", ".join(probe_refs)

            results.append(row)

# Start processing
results = []
managed_entities = root.find("managedEntities")
if managed_entities is not None:
    process_entity_group(managed_entities, "", results)
else:
    print("No <managedEntities> section found!")

# Export to Excel
df = pd.DataFrame(results)
df.to_excel("ITRS_Entities.xlsx", index=False)
print("âœ… ITRS_Entities.xlsx has been created.")
